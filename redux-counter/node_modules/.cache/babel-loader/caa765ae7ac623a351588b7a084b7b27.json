{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\git\\\\kic-react\\\\redux-counter\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // 컴포넌트를 이동 -> 자동 import 수정 가능\n\nimport App from './containers/App'; // 리덕스를 적용시키기 위해서 라이브러리 불러오기\n\nimport { createStore } from 'redux'; // 스토어 생성\n\nimport reducers from './reducers'; // reduce 함수\n\nimport { Provider } from 'react-redux'; // 스토어와 연결시킬 루트(App)\n// 1. 스토어 생성(+리듀서와 연결)\n\nconst store = createStore(reducers); // 2. 어떤 컴포넌트를 시작점으로 지정할 것인가? <Provider>컴포넌트명</Provider>\n// <Provider store={생성시킨 스토어 객체명}>\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["C:/Dev/git/kic-react/redux-counter/src/index.js"],"names":["React","ReactDOM","App","createStore","reducers","Provider","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CAEA;;AACA,SAAQC,WAAR,QAA0B,OAA1B,C,CAAqC;;AACrC,OAAOC,QAAP,MAAqB,YAArB,C,CAAuC;;AACvC,SAAQC,QAAR,QAAuB,aAAvB,C,CAAuC;AAEvC;;AACA,MAAMC,KAAK,GAAGH,WAAW,CAACC,QAAD,CAAzB,C,CAEA;AACA;;AACAH,QAAQ,CAACM,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAAhB,EAGkBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHlB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// 컴포넌트를 이동 -> 자동 import 수정 가능\nimport App from './containers/App';\n\n// 리덕스를 적용시키기 위해서 라이브러리 불러오기\nimport {createStore} from 'redux';   // 스토어 생성\nimport reducers from './reducers';     // reduce 함수\nimport {Provider} from 'react-redux';  // 스토어와 연결시킬 루트(App)\n\n// 1. 스토어 생성(+리듀서와 연결)\nconst store = createStore(reducers)\n\n// 2. 어떤 컴포넌트를 시작점으로 지정할 것인가? <Provider>컴포넌트명</Provider>\n// <Provider store={생성시킨 스토어 객체명}>\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>\n                , document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}