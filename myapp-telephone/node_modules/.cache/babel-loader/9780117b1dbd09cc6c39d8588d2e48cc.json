{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\git\\\\kic-react\\\\myapp-telephone\\\\src\\\\components\\\\ContactCreate.js\";\nimport React from 'react';\nexport default class ContactCreate extends React.Component {\n  // 생성자\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      phone: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    let nextState = {}; // 빈 객체\n    // 형식) 객체명.속성명 = 객체[속성명]\n\n    nextState[e.target.name] = e.target.value; // ex) nextState[name] = '홍길동'\n\n    nextState[e.target.phone] = e.target.value;\n    this.setState(nextState);\n  }\n\n  handleClick() {\n    // 부모 함수 호출하면서 임시로 저장한 state 값을 매개변수로 전달\n    const contact = {\n      name: this.state.name,\n      phone: this.state.phone\n    };\n    this.props.onCreate(contact); // 추가(handleCreate(contact))\n    // 입력하고 나서 초기화\n\n    this.setState({\n      name: '',\n      phone: ''\n    });\n  }\n\n  handleKeyPress(e) {\n    // e.charCode함수를 이용(13 : enter)\n    if (e.charCode === 13) {\n      // enter\n      this.handleClick(); // 입력버튼\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"\\uC774\\uB984\\uC785\\uB825\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      placeholder: \"\\uC804\\uBC88\\uC785\\uB825\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      onKeyPress: this.handleKeyPress.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Create\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Dev/git/kic-react/myapp-telephone/src/components/ContactCreate.js"],"names":["React","ContactCreate","Component","constructor","props","state","name","phone","handleChange","bind","handleClick","e","nextState","target","value","setState","contact","onCreate","handleKeyPress","charCode","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA2C;AAEtD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAG;AACX,QAAIC,SAAS,GAAG,EAAhB,CADW,CACS;AACpB;;AACAA,IAAAA,SAAS,CAACD,CAAC,CAACE,MAAF,CAASP,IAAV,CAAT,GAA2BK,CAAC,CAACE,MAAF,CAASC,KAApC,CAHW,CAGiC;;AAC5CF,IAAAA,SAAS,CAACD,CAAC,CAACE,MAAF,CAASN,KAAV,CAAT,GAA4BI,CAAC,CAACE,MAAF,CAASC,KAArC;AAEA,SAAKC,QAAL,CAAcH,SAAd;AACH;;AAEDF,EAAAA,WAAW,GAAE;AACT;AACA,UAAMM,OAAO,GAAG;AACZV,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADL;AAEZC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAFN,KAAhB;AAKA,SAAKH,KAAL,CAAWa,QAAX,CAAoBD,OAApB,EAPS,CAOuB;AAEhC;;AACA,SAAKD,QAAL,CAAc;AACVT,MAAAA,IAAI,EAAE,EADI;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAd;AAIH;;AAEDW,EAAAA,cAAc,CAACP,CAAD,EAAG;AAAG;AAChB,QAAGA,CAAC,CAACQ,QAAF,KAAe,EAAlB,EAAqB;AAAI;AACrB,WAAKT,WAAL,GADiB,CACG;AACvB;AACJ;;AAEDU,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACO,MAAA,IAAI,EAAC,MADZ;AAEO,MAAA,WAAW,EAAC,0BAFnB;AAGO,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,IAHzB;AAIO,MAAA,QAAQ,EAAE,KAAKE,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACO,MAAA,IAAI,EAAC,OADZ;AAEO,MAAA,WAAW,EAAC,0BAFnB;AAGO,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAHzB;AAIO,MAAA,QAAQ,EAAE,KAAKC,YAJtB;AAKO,MAAA,UAAU,EAAE,KAAKU,cAAL,CAAoBT,IAApB,CAAyB,IAAzB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,EAgBI;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,CADJ;AAoBH;;AAlEqD","sourcesContent":["import React from 'react';\n\nexport default class ContactCreate extends React.Component{\n\n    // 생성자\n    constructor(props){\n        super(props)\n        this.state = {\n            name: '',\n            phone: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleChange(e){\n        let nextState = {}  // 빈 객체\n        // 형식) 객체명.속성명 = 객체[속성명]\n        nextState[e.target.name] = e.target.value   // ex) nextState[name] = '홍길동'\n        nextState[e.target.phone] = e.target.value\n\n        this.setState(nextState)\n    }\n\n    handleClick(){\n        // 부모 함수 호출하면서 임시로 저장한 state 값을 매개변수로 전달\n        const contact = {\n            name: this.state.name,\n            phone: this.state.phone\n        }\n        \n        this.props.onCreate(contact)    // 추가(handleCreate(contact))\n        \n        // 입력하고 나서 초기화\n        this.setState({\n            name: '',\n            phone: ''\n        })\n    }\n\n    handleKeyPress(e){  // e.charCode함수를 이용(13 : enter)\n        if(e.charCode === 13){   // enter\n            this.handleClick()  // 입력버튼\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <p>\n                    <input type=\"text\"\n                           name=\"name\"\n                           placeholder=\"이름입력\"\n                           value={this.state.name}\n                           onChange={this.handleChange}\n                    />\n                    <input type=\"text\"\n                           name=\"phone\"\n                           placeholder=\"전번입력\"\n                           value={this.state.phone}\n                           onChange={this.handleChange}\n                           onKeyPress={this.handleKeyPress.bind(this)}\n                    />\n                </p>\n                <button onClick={this.handleClick}>Create</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}