{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\git\\\\kic-react\\\\myapp\\\\src\\\\components\\\\RandomNumber.js\";\nimport React from 'react';\n\nclass RandomNumber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateNumber = this.updateNumber.bind(this);\n  } // 부모의 함수를 호출해야 되는데 매개변수가 있다면\n  // 자식 컴포넌트에서 호출하는 함수에서 부모의 넘겨받은 함수를 호출할 수 있도록 코딩해주어야 한다.\n\n\n  updateNumber() {\n    let value = Math.round(Math.random() * 100); // 0 ~ 99\n    // 부모의 함수 호출\n\n    this.props.onUpdate(value); // updateValue(value) -> 변경\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"\\uB79C\\uB364\\uAC12 : \", this.props.number), React.createElement(\"button\", {\n      onClick: this.updateNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\uB79C\\uB364\\uAC12\\uCD9C\\uB825\"), React.createElement(\"button\", {\n      onClick: this.props.onTest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"\\uB9E4\\uAC1C\\uBCC0\\uC218 \\uC5C6\\uB294 \\uD568\\uC218\\uD638\\uCD9C\"));\n  }\n\n}\n\nexport default RandomNumber;","map":{"version":3,"sources":["C:/Dev/git/kic-react/myapp/src/components/RandomNumber.js"],"names":["React","RandomNumber","Component","constructor","props","updateNumber","bind","value","Math","round","random","onUpdate","render","number","onTest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH,GAJsC,CAMvC;AACA;;;AACAD,EAAAA,YAAY,GAAE;AACV,QAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ,CADU,CACoC;AAE9C;;AACA,SAAKN,KAAL,CAAWO,QAAX,CAAoBJ,KAApB,EAJU,CAIkB;AAC/B;;AAEDK,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAW,KAAKR,KAAL,CAAWS,MAAtB,CADG,EAEH;AAAQ,MAAA,OAAO,EAAE,KAAKR,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFG,EAGH;AAAQ,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWU,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAHG,CAAP;AAKH;;AArBsC;;AAwB3C,eAAeb,YAAf","sourcesContent":["import React from 'react'\r\n\r\nclass RandomNumber extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.updateNumber = this.updateNumber.bind(this)\r\n    }\r\n\r\n    // 부모의 함수를 호출해야 되는데 매개변수가 있다면\r\n    // 자식 컴포넌트에서 호출하는 함수에서 부모의 넘겨받은 함수를 호출할 수 있도록 코딩해주어야 한다.\r\n    updateNumber(){\r\n        let value = Math.round(Math.random() * 100)   // 0 ~ 99\r\n\r\n        // 부모의 함수 호출\r\n        this.props.onUpdate(value)  // updateValue(value) -> 변경\r\n    }\r\n\r\n    render(){\r\n        return(<h1>\r\n            <h1>랜덤값 : {this.props.number}</h1>\r\n            <button onClick={this.updateNumber}>랜덤값출력</button>\r\n            <button onClick={this.props.onTest}>매개변수 없는 함수호출</button>\r\n        </h1>)\r\n    }\r\n}\r\n\r\nexport default RandomNumber;"]},"metadata":{},"sourceType":"module"}